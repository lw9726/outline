name: buildx

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*

env:
  DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
  DOCKER_PLATFORMS: "linux/amd64,linux/arm/v7,linux/arm64"
  DOCKER_TAG: latest

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "DOCKER_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Docker Buildx (build)
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform=${{ env.DOCKER_PLATFORMS }} \
          --output "type=image,push=false" \
          -t ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }} .
      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
      - name: Docker Buildx (push)
        run: |
          docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --platform=${{ env.DOCKER_PLATFORMS }} \
          --output "type=image,push=true" \
          -t ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"
      - name: Docker Check Manifest
        run: |
          docker run --rm mplatform/mquery ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }}

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
